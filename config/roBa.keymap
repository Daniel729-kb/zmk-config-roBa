#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&sl { release-after-ms = <180>; };

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 10>;
        };

        alt_tab {
            bindings = <&kp LA(TAB)>;
            key-positions = <11 12>;
        };

        double_quotation {
            bindings = <&kp ENTER>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <8 7>;
        };

        ESCC {
            bindings = <&kp ESCAPE>;
            key-positions = <1 0>;
        };

        ZZ {
            bindings = <&kp LS(Z)>;
            key-positions = <22 23>;
        };

        QUE {
            bindings = <&kp RS(SLASH)>;
            key-positions = <33 32>;
        };

        DELL {
            bindings = <&kp DELETE>;
            key-positions = <8 7>;
        };

        del2 {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };

        BS {
            bindings = <&kp BACKSPACE>;
            key-positions = <8 9>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        macro_left_click: macro_left_click {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mkp LCLK>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mkp LCLK>,
                <&macro_tap>,
                <&tog_off 4 &sl 4>;

            label = "MACRO_LEFT_CLICK";
        };

        cmd_space: cmd_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE)>;
            label = "CMD_SPACE";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        tog_off: toggle_layer_off_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E      &kp R                    &kp T                                                  &kp Y        &kp U  &lt 5 I    &kp O    &kp P
&kp A             &kp S         &kp D      &kp F                    &kp G        &kp LS(LG(S))              &kp LS(MINUS)  &kp H        &kp J  &kp K      &kp L    &kp MINUS
&mt LEFT_SHIFT Z  &kp X         &kp C      &kp V                    &kp B        &kp LEFT_BRACKET           &kp BACKSPACE  &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LEFT_ALT      &kp LEFT_WIN  &kp LCTRL  &lt_to_layer_0 6 ESCAPE  &lt 2 SPACE  &lt_to_layer_0 3 CAPS      &lt 2 SPACE    &lt 1 ENTER                             &mt RIGHT_SHIFT DELETE
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp F1   &kp F2   &kp F3  &kp F4  &kp F5                       &kp NUMBER_6  &kp NUMBER_7   &kp N8        &kp NUMBER_9          &kp NUMBER_0
&kp F6   &kp F7   &kp F8  &kp F9  &kp F10  &trans      &trans  &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp F11  &kp F12  &trans  &trans  &trans   &trans      &trans  &trans        &trans         &trans        &trans                &kp UP_ARROW
&trans   &trans   &trans  &trans  &trans   &trans      &trans  &trans                                                           &kp DOWN_ARROW
            >;
        };

        NUM {
            bindings = <
&kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                                          &kp NUMBER_6      &kp NUMBER_7       &kp NUMBER_8    &kp NUMBER_9          &kp NUMBER_0
&kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT   &kp LC(LA(KP_NUMBER_0))      &kp STAR   &kp CARET         &kp AMPERSAND      &kp ASTERISK    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp PLUS         &kp MINUS     &kp ASTERISK  &kp SLASH     &kp PERIOD    &kp EQUAL                    &kp SLASH  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp BACKSLASH
&trans           &trans        &trans        &trans        &trans        &trans                       &trans     &trans                                                                     &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp LS(LEFT_ALT)  &kp LC(LS(TAB))         &kp UP_ARROW    &kp LA(TAB)              &trans                             &kp ASTERISK  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp SLASH
&kp LA(TAB)       &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &kp EQUAL     &kp PLUS      &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS
&trans            &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &kp NUMBER_0  &kp PERIOD    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD
&trans            &trans                  &trans          &trans                   &trans   &trans      &trans        &trans                                                  &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                 &trans  &macro_left_click  &mo 5     &mo 5     &mkp MB2
&trans  &trans  &trans  &trans  &trans  &trans                 &trans  &trans  &macro_left_click  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans                 &trans  &trans  &trans             &trans    &trans    &trans
&trans  &trans  &trans  &trans  &mo 5   &macro_left_click      &trans  &trans                                         &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&kp LC(Q)  &kp LC(W)  &trans     &trans     &trans                                &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans     &trans     &trans     &trans     &trans  &trans           &trans       &trans        &trans        &trans        &trans        &trans
&kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp A   &bootloader      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans     &trans     &trans     &trans     &trans  &trans           &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
