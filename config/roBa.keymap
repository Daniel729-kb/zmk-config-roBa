#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// Layer definitions for clarity

#define DEFAULT 0
#define FUNCTION 1
#define NUM 2
#define ARROW 3
#define MOUSE 4
#define SCROLL 5
#define SYSTEM 6
#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

// Configure existing behaviors

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&sl { release-after-ms = <250>; };

/ {
    // ========================
    // COMBOS SECTION
    // ========================

    combos {
        compatible = "zmk,combos";

        // Mouse layer toggle - J+K keys

        mouse_toggle {
            bindings = <&tog MOUSE>;
            key-positions = <18 19>;
            timeout-ms = <50>;
        };

        // Navigation combos

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 10>;
        };

        alt_tab {
            bindings = <&kp LA(TAB)>;
            key-positions = <11 12>;
        };

        // Punctuation combos

        enter_combo {
            bindings = <&kp ENTER>;
            key-positions = <20 21>;
        };

        equals {
            bindings = <&kp EQUAL>;
            key-positions = <8 7>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <1 0>;
        };

        // Letter combos

        shift_z {
            bindings = <&kp LS(Z)>;
            key-positions = <22 23>;
        };

        question_mark {
            bindings = <&kp RS(SLASH)>;
            key-positions = <33 32>;
        };
    };

    // ========================
    // MACROS SECTION
    // ========================

    macros {
        // Macro to return to layer 0 with parameter

        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to DEFAULT &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        // Command+Space macro for Mac

        cmd_space: cmd_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE)>;
            label = "CMD_SPACE";
        };
    };

    // ========================
    // BEHAVIORS SECTION
    // ========================

    behaviors {
        // Layer tap that returns to layer 0

        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&mo>, <&to_layer_0>;
        };

        // Space with sticky layer 2

        space_sl2: space_sl2 {
            compatible = "zmk,behavior-hold-tap";
            label = "SPACE_STICKY_LAYER_2";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&sl>, <&kp>;
        };

        // Encoder behaviors

        encoder_msc_down_up: encoder_msc_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_MSC_DOWN_UP";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };

        encoder_msc_left_right: encoder_msc_left_right {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_MSC_LEFT_RIGHT";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_LEFT>, <&msc SCRL_RIGHT>;

            tap-ms = <20>;
        };
    };

    // ========================
    // KEYMAP SECTION
    // ========================

    keymap {
        compatible = "zmk,keymap";

        // Layer 0: Default typing layer

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E      &kp R                         &kp T                                                               &kp Y               &kp U  &lt SCROLL I  &kp O    &kp P
&mt LCTRL A       &kp S         &kp D      &kp F                         &kp G                 &kp LG(LS(S))                  &kp EQUAL      &kp H               &kp J  &kp K         &kp L    &kp MINUS
&mt LEFT_SHIFT Z  &kp X         &kp C      &kp V                         &kp B                 &kp AT                         &kp BACKSPACE  &kp N               &kp M  &kp COMMA     &kp DOT  &kp SLASH
&kp LALT          &kp LEFT_GUI  &kp LCTRL  &lt_to_layer_0 SYSTEM ESCAPE  &space_sl2 NUM SPACE  &lt_to_layer_0 ARROW CAPS      &lt NUM SPACE  &lt FUNCTION ENTER                                &mt RIGHT_SHIFT DELETE
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        // Layer 1: Function keys and numbers

        function_layer {
            bindings = <
&kp F1   &kp F2   &kp F3  &kp F4  &kp F5                       &kp NUMBER_6  &kp NUMBER_7   &kp N8        &kp NUMBER_9          &kp NUMBER_0
&kp F6   &kp F7   &kp F8  &kp F9  &kp F10  &trans      &trans  &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp F11  &kp F12  &trans  &trans  &trans   &trans      &trans  &trans        &trans         &trans        &trans                &kp UP_ARROW
&trans   &trans   &trans  &trans  &trans   &trans      &trans  &trans                                                           &kp DOWN_ARROW
            >;
        };

        // Layer 2: Numbers and symbols

        number_layer {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                         &kp NUMBER_6  &kp NUMBER_7  &kp N8     &kp NUMBER_9  &kp NUMBER_0
&kp EXCL      &kp AT        &kp POUND     &kp DLLR      &kp PRCNT  &trans      &trans  &kp CARET     &kp AMPS      &kp STAR   &kp LPAR      &kp RPAR
&kp F11       &kp F12       &trans        &trans        &trans     &trans      &trans  &trans        &trans        &kp COLON  &kp DQT       &kp UP_ARROW
&trans        &trans        &trans        &trans        &trans     &trans      &trans  &trans                                               &kp DOWN_ARROW
            >;

            sensor-bindings = <&encoder_msc_left_right>;
        };

        // Layer 3: Arrow keys and numpad

        arrow_layer {
            bindings = <
&kp LS(LEFT_ALT)  &trans          &kp UP_ARROW    &trans           &trans                            &kp KP_DIVIDE    &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS
&kp LA(TAB)       &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans      &kp KP_EQUAL  &kp KP_MULTIPLY  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS
&trans            &trans          &trans          &trans           &trans  &trans      &kp KP_COMMA  &kp KP_DOT       &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_ENTER
&trans            &trans          &trans          &trans           &trans  &trans      &trans        &kp KP_NUMBER_0                                                     &tog ARROW
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        // Layer 4: Mouse controls

        mouse_layer {
            bindings = <
&trans  &trans  &trans  &trans      &trans                            &trans  &mkp LCLK  &mkp MB3    &mo SCROLL  &mkp RCLK
&trans  &trans  &trans  &trans      &trans     &trans         &trans  &trans  &mkp LCLK  &mo SCROLL  &mkp RCLK   &trans
&trans  &trans  &trans  &trans      &trans     &trans         &trans  &trans  &mkp LCLK  &trans      &trans      &trans
&trans  &trans  &trans  &mo SCROLL  &mkp RCLK  &mkp LCLK      &trans  &trans                                     &trans
            >;
        };

        // Layer 5: Scroll controls

        scroll_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        // Layer 6: System controls and Bluetooth

        system_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans           &trans       &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &bootloader      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans           &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
